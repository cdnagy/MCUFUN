/*
 * heartbeat.c
 *
 *  Created on: Sep 10, 2019
 *      Author: chris
 */

#include "heartbeat.h"

TIM_HandleTypeDef    timerHandle;

volatile uint32_t prescaler = 0;

void heartbeatInit(void){

	/* Compute the prescaler value to have TIM3 counter clock equal to 10000 Hz */
	prescaler = (uint32_t)((SystemCoreClock/ 2) / 10000) - 1;

	/* Set TIMx instance */
	timerHandle.Instance = TIM3;

	/* Initialize TIMx peripheral as follows:
	   + Period = 10000 - 1
	   + Prescaler = ((SystemCoreClock / 2)/10000) - 1
	   + ClockDivision = 0
	   + Counter direction = Up
	*/
	timerHandle.Init.Period            = 10000 - 1;
	timerHandle.Init.Prescaler         = prescaler;
	timerHandle.Init.ClockDivision     = 0;
	timerHandle.Init.CounterMode       = TIM_COUNTERMODE_UP;
	timerHandle.Init.RepetitionCounter = 0;
	timerHandle.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

	if (HAL_TIM_Base_Init(&timerHandle) != HAL_OK)
	{
		/* Initialization Error */
		Error_Handler();
	}

	/* Start the TIM Base generation in interrupt mode ####################*/
	/* Start Channel1 */
	if (HAL_TIM_Base_Start_IT(&timerHandle) != HAL_OK)
	{
		/* Starting Error */
		Error_Handler();
	}
}

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
	BSP_LED_Toggle(LED1);
}
